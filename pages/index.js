import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Access from '../components/Forms/Access'
import RowsandCols from '../components/Cards/infoColRow'
import toast, { Toaster } from 'react-hot-toast';
import { useMutation, gql } from '@apollo/client';
import { useState } from 'react'

const OBTENER_CLAVE = gql`
mutation obtenerClave($input: ClaveInput) {
  obtenerClave(input: $input)
}
`;

export default function Home() {
  const [obtenerClave] = useMutation(OBTENER_CLAVE);
  const [access, state_access] = useState(false);
  const [clave, state_clave] = useState('');

  const getClave = async (e) => {
    e.preventDefault();

    try {

      const { data } = await obtenerClave({
        variables: {
          input: {
            clave: clave
          }
        }
      })

      if (data.obtenerClave) {
        state_access(true)
      } else {
        toast.custom((t) => (
          <div className={`${t.visible ? 'animate-enter' : 'animate-leave'} bg-red-600 rounded`}>
            <div className='text-center'>
              <span className="material-symbols-outlined">
                warning
              </span>
            </div>
            <h5 className='text-white '>contrase√±a incorrecta</h5>
          </div>
        ));
        state_access(false);
        state_clave('');
      }

    } catch (error) {
      console.log(error)
    }
  }

  return (
    <div className='w-full'>
      <Toaster />
      <Head>
        <title>HORARIOS</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css" integrity="sha512-NhSC1YmyruXifcj/KFRWoC561YpHpc5Jtzgvbuzx5VozKpWvQ+4nXhPdFgmx8xqexRcpAglTj9sIBWINXa8x5w==" crossorigin="anonymous" referrerpolicy="no-referrer" />
      </Head>

      

      {
        access == true ?

          <div>
            <RowsandCols />
          </div>

          : <Access value={clave} onChange={(e) => state_clave(e.target.value)} submit={getClave} />
      }


    </div>
  )
}
